---
import Layout from '../../../layouts/Layout.astro';
import PdfViewer from '../../../components/PdfViewer.astro';
import libraryContent from '../../../data/library_content.json';

export async function getStaticPaths() {
  const category2Items = Array.isArray(libraryContent.category2) ? libraryContent.category2 : [];
  return category2Items.map(item => ({
    params: { slug: item.slug },
    props: { item },
  }));
}

const { item } = Astro.props;
---
<Layout title={item.title + " | [Your Library Name]"} currentPage={`/library/category2/${item.slug}`} isBookDetailPage={true}>
  <article class="book-detail">
    <h1>{item.title}</h1>
    {item.author && <p class="author">By: {item.author}</p>}
    {item.summary && <p class="summary">{item.summary}</p>}

    {item.pdfUrl && (
      <div class="pdf-embed-container">
        <PdfViewer pdfUrl={item.pdfUrl} />
      </div>
    )}
    
    {!item.pdfUrl && <p><em>Content for this item is not available in PDF format.</em></p>}
  </article>
</Layout>

<style>
  /* Styles are identical to explorations/[slug].astro */
  .book-detail {
    padding: 20px;
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
  }
  .book-detail h1 {
    margin-top: 0;
    margin-bottom: 0.5rem;
    font-size: 2rem;
    color: #333;
  }
  .author {
    font-style: italic;
    color: #555;
    margin-bottom: 1rem;
  }
  .summary {
    margin-bottom: 1.5rem;
    line-height: 1.6;
  }
  .pdf-embed-container {
    margin-top: 20px;
    border: 1px solid #ddd;
    height: 75vh;
    display: flex;
    flex-direction: column;
  }
  .pdf-embed-container > :global(.pdf-viewer-container) {
    flex-grow: 1;
    min-height: 0;
  }
</style>
